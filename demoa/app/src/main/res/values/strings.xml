<resources>
    <string name="app_name">demoa</string>
    <string name="text1">
    * 修正Toolbar颜色
    *
    * @param toolbarView       toolbar
    * @param toolbarIconsColor 修正色
    * @param activity          activity
    */
    public static void colorizeToolbar(Toolbar toolbarView, int toolbarIconsColor, Activity activity) {
    final PorterDuffColorFilter colorFilter = new PorterDuffColorFilter(toolbarIconsColor, PorterDuff.Mode.SRC_IN);
    for (int i = 0; i); i++) {
    final View v = toolbarView.getChildAt(i);
    //第一步：修改返回按钮颜色（或者是抽屉按钮）
    if (v instanceof ImageButton) {
    ((ImageButton) v).getDrawable().setColorFilter(colorFilter);
    }
    //第二步：修改 ActionMenuView 按钮颜色，text、back icon、overflow 除外的 icons 颜色
    if (v instanceof ActionMenuView) {
    for (int j = 0; j ((ActionMenuView) v).getChildCount(); j++) {
    final View innerView = ((ActionMenuView) v).getChildAt(j);
    if (innerView instanceof ActionMenuItemView) {
    for (int k = 0; k((ActionMenuItemView) innerView).getCompoundDrawables().length; k++) {
    if (((ActionMenuItemView) innerView).getCompoundDrawables()[k] != null) {
    final int finalK = k;
    innerView.post(() -> ((ActionMenuItemView) innerView)
    .getCompoundDrawables()[finalK].setColorFilter(colorFilter));
    }
    }
    }
    }
    }
    //第三步：修改 Title、Subtitle 的颜色
    toolbarView.setTitleTextColor(toolbarIconsColor);
    toolbarView.setSubtitleTextColor(toolbarIconsColor);
    ///第四步：修改 OverFlow Menu Icon 的颜色
    setOverflowButtonColor(activity, colorFilter);
    }
    }</string>
</resources>
